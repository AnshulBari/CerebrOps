apiVersion: apps/v1
kind: Deployment
metadata:
  name: cerebrops-app
  labels:
    app: cerebrops
    component: web
spec:
  replicas: 2
  selector:
    matchLabels:
      app: cerebrops
      component: web
  template:
    metadata:
      labels:
        app: cerebrops
        component: web
    spec:
      containers:
      - name: cerebrops-web
        image: cerebrops:latest
        ports:
        - containerPort: 5000
          name: http
        env:
        - name: FLASK_ENV
          value: "production"
        - name: SLACK_WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              name: cerebrops-secrets
              key: slack-webhook-url
              optional: true
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: logs
        emptyDir: {}
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: cerebrops-service
  labels:
    app: cerebrops
    component: web
spec:
  selector:
    app: cerebrops
    component: web
  ports:
  - port: 80
    targetPort: 5000
    protocol: TCP
    name: http
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cerebrops-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: cerebrops.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: cerebrops-service
            port:
              number: 80
